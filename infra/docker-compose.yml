version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    container_name: cms-postgres
    environment:
      POSTGRES_DB: cms
      POSTGRES_USER: cms
      POSTGRES_PASSWORD: cms123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cms-network

  # Cache
  redis:
    image: redis:7-alpine
    container_name: cms-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cms-network

  # Object Storage (S3-compatible)
  minio:
    image: minio/minio
    container_name: cms-minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - cms-network

  # Workflow Engine
  temporal:
    image: temporalio/auto-setup:1.22
    container_name: cms-temporal
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal123
      - POSTGRES_SEEDS=postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
    ports:
      - "7233:7233"
      - "8233:8233"
    depends_on:
      - postgres
    volumes:
      - ./temporal-dynamicconfig:/etc/temporal/config/dynamicconfig
    networks:
      - cms-network

  # Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: cms-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak123
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    command: start-dev
    networks:
      - cms-network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  cms-network:
    driver: bridge
